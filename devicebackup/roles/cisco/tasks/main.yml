---

############################
# Références:

# --> cisco.ios.ios_interfaces:
# https://docs.ansible.com/ansible/latest/collections/cisco/ios/ios_interfaces_module.html


############################
# Commentaires:

# Comment utilsier le PlayBook:
# 1- Cloner le projet
# 2- Modifier le ficiher devicebackup/hosts et y ajouter les IP / FQDN et les identifiants des équipements
# 3- Aller en SSH dans le dossier devicebackup
# 4- Lancer la commande suivante :
# ansible-playbook -i hosts-cisco test.yml




- name: Replaces device configuration of listed interfaces with provided configuration
  # cisco.ios.ios_interfaces: Est un module de "cisco.ios.ios_config" permettant de configurer les interfaces de IOS
  # /!\ Il faut le nom de l'interface SANS le mot "Interface"
  cisco.ios.ios_interfaces:
    config:
    # Exemple : Créer une interface LoopBack
    - name: loopback 666
      description: Configured and Merged by Ansible Network 2
      enabled: true
    # Exemple: Configurer l'interafce "GigabitEthernet3"
    - name: GigabitEthernet3
      description: Configured and Replaced by Ansible Network 2
      enabled: false
    #
    # Exemple : Créer une Sub-Interface VLAN "GigabitEthernet3.666"
    - name: GigabitEthernet3.666
      description: Configured and Replaced by Ansible Network 2
      enabled: false
      # valn: 666
    state: replaced




- name: Backup current switch config (ios)
  cisco.ios.ios_config:
    # backup: Est un module de "cisco.ios.ios_config" qui fait "show running-configuration" et
    # sauvegarde le résultat dans le dossier "backup" du rôle
    # ça crée des fichiers text avec l'IP/FQDN et le Time-Stamp
    # Exemple: "sandbox-iosxe-latest-1.cisco.com_config.2023-01-04@23:18:23"
    backup: yes
  register: output

- name: Backup current switch config (ios) output
  debug:
    msg: "{{ output.backup_path }}"



# - name: Backup running-config startup-config
#   cisco.ios.ios_command:
#     commands: copy running-config startup-config
#   register: result

# - name: Afficher le résultat dans le terminal windows
#   debug:
#     var: result





# - name: connection ssh bidon
#   # command: ssh user@10.1.254.251
#   command: ssh root@185.139.20.240 "ls"
#   delegate_to: localhost
#   register: res

#- debug: var=res

# - name: connection ssh router
#   command: ssh user@10.1.254.251
#   delegate_to: localhost
#   register: res

# - debug: var=res

# - name: passer en mode enable à la connection ssh
#   cisco.ios.ios_command:
#     commands: enable

# - name: show run
#   cisco.ios.ios_command:
#     commands: show run
#   register: result

# - name: Afficher le résultat dans le terminal windows
#   debug:
#     var: result
